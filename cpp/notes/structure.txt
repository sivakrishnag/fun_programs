Structures
==========
. The other way to create a user defined type in C++ is through the
  keyword struct
. It is very similar to the class.
. There is almost no difference between a class and a struct.
  The only difference is that by default the access to the members in a struct
  is public if no access modifier is specified. But in class, the default access
  modifier is private.

. In C++, the structures are used to represent the abstract data types or record
  like structures that needs to have public access to their members.
. Although we can represent those types with classes as well but using structures
  is more convenient because all the members have public access.

. Structures are also used for creating function objects (a.k.a functors).
  Function objects are used as callbacks in standard template library.

Example #1:
#include <iostream>
struct Point {
  int x;
  int y;
}; 

void DrawLine(int x1, int y1, int x2, int y2)
{

}

void DrawLine(Point start, Point end)
{
  std::out << start.x << std::endl;  //We can access x directly because of default public access.
}

int main ()
{
  return 0;
}


Example #2: (Functors)
#include <iostream>
struct Functor {
    bool operator()(int a, int b)
    {
        return a < b;
    }
};

int main ()
{
    Functor f;
    std::cout << "f(5, 7) = " << (f(5, 7) ? "True" : "False") << std::endl;
}
